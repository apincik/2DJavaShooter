/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.view;

import java.awt.event.KeyEvent;
import game.model.ModelObject;
import game.control.Controller;
import game.model.Player;
import java.awt.Dimension;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;

/**
 *
 * @author andrej
 */
public class GameView extends javax.swing.JFrame {

    int directionX, directionY;
    //public boolean shooting = false;
    private Controller controller;
    
    /**
     * Creates new form gameView
     */
    public GameView(Controller controller) {
        initComponents();
        this.controller = controller;
        controller.setView(this);
        this.requestFocus();
        logoutButton.setVisible(false);
        //this.setResizable(false);
    }
    
    
    public void updateModel(List<ModelObject> model) {
        mainPanel.updateModel(model);
    }
    
    
    
    public void finishGameMessage() {
        
        JOptionPane.showMessageDialog(null, "Prehrali ste.");
        
    }
    
    
    
    public void startGameMessage() {
        
        JOptionPane.showMessageDialog(null, "Vitajte v hre.");
    }
    
    
    
    public void cannotConnectMessage() {
        JOptionPane.showMessageDialog(null, "Neda sa pripojiť k serveru.");
    }
    
    
    
    public void notLoggedInMessage() {
        
        JOptionPane.showMessageDialog(null, "Nieste prihlásený. Prihláste sa alebo registrujte.");
        
    }
    
    
    
    public void  loginFailedMessage() {
   
        JOptionPane.showMessageDialog(null, "Nepodarilo sa prihlasiť");
        
    }
    
    
    public void loginSuccessfulMessage() {
     
        JOptionPane.showMessageDialog(null, "Boli ste prihlaseny.");
        
    }
    
    
    
    public HashMap showLoginDialog() {
        
        HashMap<String, String> mp = new HashMap<String, String>();
        
        String s = (String)JOptionPane.showInputDialog(
                    null,
                    "Zadajte vas login:",
                    JOptionPane.PLAIN_MESSAGE
                    );
        mp.put("user", s);
        
        s = (String)JOptionPane.showInputDialog(
                    null,
                    "Zadajte vase heslo:",
                    JOptionPane.PLAIN_MESSAGE
                    );
        mp.put("password", s);
       
        System.out.println("Login: " + mp.get("user") + " password: " + mp.get("password"));
        
        return mp;
        
    }
    
    
    public void showMessage(String str) {
        
        JOptionPane.showMessageDialog(null, str);
        
    }
    
    
    
    public void handleButtonsAfterLogin() {
        
        registerButton.setVisible(false);
        loginButton.setVisible(false);
        logoutButton.setVisible(true);
        
    }
    
    
    
    public void setUsernameLabel(String str) {
        
        usernameLabel.setText(str);
        
    }
    
    
    
    
    public int getDirectionX() {
        return directionX;
    }

    
    
    public int getDirectionY() {
        return directionY;
    }
    
    
    
    public void debugText(String string) {
        String text = textArea.getText();
        textArea.setText(text + "\n" + string);
    }
    
    
    
    public void printTestData() {
        
        Dimension dim;
        String str = "";
        
        dim = mainPanel.getSize();
        str += dim.width + " - " + dim.height;
        
        System.out.println(str);
    }
    
    
    public int getClickedXPosition() {
        
        return mainPanel.getClickedXPosition();
    }
    
    
    public int getClickedYPosition() {
        
        
        return mainPanel.getClickedYPosition();
        
    }
    
    
    public boolean isClicked() {
        
        return mainPanel.isClicked();
        
    }
    
    
    
    /*public String playersNameSelectDialog() {

        String s = (String) JOptionPane.showInputDialog(
                null,
                "Type your player name:"
        );

        //If a string was returned, say so.
        if ((s != null) && (s.length() > 0)) {

            return s;
        }
        else {
            playersNameSelectDialog();
        }
        
        return "";
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        mainPanel = new game.view.MainPanel();
        usernameLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(666, 450));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        StopButton.setText("Stop");
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        mainPanel.setMinimumSize(new java.awt.Dimension(500, 400));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        usernameLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StopButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startButton)
                            .addComponent(StopButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(logoutButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        controller.start();
        //textArea.setText("Hra sa zacala !");
        printTestData();
        this.requestFocus();
    }//GEN-LAST:event_startButtonActionPerformed
    
    /*public Dimension getPanelSize() {
        return mainPanel.getSize();
    }*/
    
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
        //System.out.println(evt.getKeyCode());
        
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_LEFT:
                directionX = - Player.PLAYER_MOVE_OFFSET;
                break;
            case KeyEvent.VK_RIGHT:
                directionX = Player.PLAYER_MOVE_OFFSET;
                break;
            case KeyEvent.VK_UP:
                //System.out.println("KEY PRESSED\n");
                directionY = - Player.PLAYER_MOVE_OFFSET;
                break;
            case KeyEvent.VK_DOWN:
                directionY = Player.PLAYER_MOVE_OFFSET;
                break;
            case 32:                                    //space
                //System.out.println("SHOOOOOTING");        
                //shooting = true;
                break;
            default:
        }
    }//GEN-LAST:event_formKeyPressed

    
    
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_LEFT:
                directionX = 0;
                break;
            case KeyEvent.VK_RIGHT:
                directionX = 0;
                break;
            case KeyEvent.VK_UP:
                directionY = 0;
                break;
            case KeyEvent.VK_DOWN:
                directionY = 0;
                break;
            default:
        }
    }//GEN-LAST:event_formKeyReleased

    
    
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyTyped

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        controller.stop();
        this.requestFocus();
    }//GEN-LAST:event_StopButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        
        controller.loginPlayer( showLoginDialog() );
        
    }//GEN-LAST:event_loginButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        
        controller.registerPlayer( showLoginDialog() );
        
    }//GEN-LAST:event_registerButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        registerButton.setVisible(true);
        loginButton.setVisible(true);
        logoutButton.setVisible(false);
        controller.logoutPlayer();
    }//GEN-LAST:event_logoutButtonActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameView().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StopButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton logoutButton;
    public game.view.MainPanel mainPanel;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton startButton;
    public javax.swing.JTextArea textArea;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}

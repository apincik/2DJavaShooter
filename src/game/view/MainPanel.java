/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.view;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import game.model.ModelObject;
import game.model.Player;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;

/**
 *
 * @author andrej
 */
public class MainPanel extends javax.swing.JPanel {

    
    List<ModelObject> model;    //game objects
    Image backBuffer;
    BufferedImage background;
    BufferedImage localPlayer;
    BufferedImage remotePlayer;
    
    
    public MainPanel() {
        initComponents();       //pre-defined java method
        backBuffer=new BufferedImage(ModelObject.WIDTH, ModelObject.HEIGTH, BufferedImage.SCALE_DEFAULT);
        try {
            background = ImageIO.read(getClass().getResource("/game/view/road2d.jpg"));
            localPlayer = ImageIO.read(getClass().getResource("/game/view/car1.png"));
            remotePlayer = ImageIO.read(getClass().getResource("/game/view/car2.png"));
            Player.IMAGE_WIDTH = localPlayer.getWidth();
            Player.IMAGE_HEIGHT = localPlayer.getHeight();
        } catch (IOException ex) {
           
        }
    }
    
    @Override
    public void paintComponent(Graphics graphic) {
        super.paintComponent(graphic);
        Graphics g = backBuffer.getGraphics();
        g.drawImage(background, 0, 0, backBuffer.getWidth(null),backBuffer.getHeight(null),null);
        if (model!=null ) {
            for(ModelObject o :model) {
                if (o instanceof Player) {
                    if(o.getPlayerType() == "local") {
                        g.drawImage(localPlayer,o.getX(), o.getY(), null);
                    }
                    if(o.getPlayerType() == "remote") {
                        System.out.println("-------------\n");
                        System.out.println("REMOTE POS: " + o.getX() + " : " + o.getY());
                        System.out.println("-------------\n");
                        g.drawImage(remotePlayer,o.getX(), o.getY(), null);
                    }
                } 
            }
        }

        Graphics2D graphic2d = (Graphics2D) graphic;
        graphic2d.drawImage(backBuffer, 0, 0,this.getWidth(),this.getHeight(), null);
        
    }
    
    
    
    public void updateModel(List<ModelObject> data) {
        this.model = data;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
